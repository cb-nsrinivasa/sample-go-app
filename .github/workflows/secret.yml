name: secret-test

on: push

jobs:
  # mask-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Step 1 - Generate secret and mask it
  #       id: generate
  #       run: |
  #         SECRET_VALUE="super-secret-123"
  #         echo "::add-mask::$SECRET_VALUE"
  #         echo "secret_value=$SECRET_VALUE" >> $GITHUB_OUTPUT
  #     - name: Step 2 - Echo the secret (will be masked)
  #       run: |
  #         echo "Secret from step 1: ${{ steps.generate.outputs.secret_value }}"

  # mask-test-print:
  #   runs-on: ubuntu-latest
  #   needs: mask-test
  #   steps:
  #     - name: step3
  #       run: |
  #         echo "Secret from step 1: ${{ steps.generate.outputs.secret_value }}"



  job1:
    runs-on: ubuntu-latest
    outputs:
      secret-value: ${{ steps.step1.outputs.secret }}
    steps:
      - id: step1
        run: |
          secret="super-secret"
          echo "::add-mask::$secret"
          echo "secret=$secret" >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Mask secret again
        run: |
          secret="${{ needs.job1.outputs.secret-value }}"
          echo "::add-mask::$secret"
      - name: Use secret in logs (masked)
        run: |
          echo "Secret is: ${{ needs.job1.outputs.secret-value }}"

          
